// Code generated by exceltool. DO NOT EDIT!
package cfg

import (
	"encoding/json"
	"fmt"
	"os"

	"github.com/zeromicro/go-zero/core/logx"
)

// 道具.xlsx - 道具
type Cfg_Item struct {
	Id        int32  // Cfg_Item
	Name      string // 名字
	Desc      string // 描述
	Types     int32  // 类型
	Pos       int32  // 位置
	NotInBag  int32  // 不占用背包格子
	BindType  int32  // 绑定类型
	StackType int32  // 叠加类型
	StackSize int64  // 最大叠加数量
	Level     int32  // 等级
	Quality   int32  // 品质
	EquipSlot int32  // 装备位置
	Icon      string // 图标
}

var _Cfg_ItemMap = make(map[int32]*Cfg_Item)
var _Cfg_ItemAry []*Cfg_Item

func initCfg_Item() {
	fileName := "./conf/excel/Cfg_Item.json"
	bytes, err := os.ReadFile(fileName)
	if err != nil {
		panic(fmt.Errorf("Fatal error config file: %s \n", err))
	}
	if err := json.Unmarshal(bytes, &_Cfg_ItemAry); err != nil {
		panic(err)
	}
	for _, _Cfg_Item := range _Cfg_ItemAry {
		_Cfg_ItemMap[_Cfg_Item.Id] = _Cfg_Item
	}
}

func GetCfg_ItemMap() map[int32]*Cfg_Item {
	return _Cfg_ItemMap
}

func GetCfg_ItemAry() []*Cfg_Item {
	return _Cfg_ItemAry
}

func GetCfg_ItemById(id int32) (item *Cfg_Item) {
	item = _Cfg_ItemMap[id]
	if item == nil {
		logx.Errorf("GetCfg_ItemByID fail: %d ", id)
	}
	return item
}

func GetCfg_ItemByIndex(idx int) (item *Cfg_Item) {
	lens := len(_Cfg_ItemAry)
	if lens <= 0 || idx >= lens {
		logx.Errorf("GetCfg_ItemByIndex fail: %d ", idx)
		return nil
	}
	return _Cfg_ItemAry[idx]
}
